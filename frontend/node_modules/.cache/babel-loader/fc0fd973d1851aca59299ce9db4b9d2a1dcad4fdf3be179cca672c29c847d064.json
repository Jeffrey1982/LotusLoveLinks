{"ast":null,"code":"var _jsxFileName = \"D:\\\\LotusLoveLinks\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// 1. Initialize the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// 2. Create the provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(false); // Change loading to false initially\n\n  // Simulate a delayed authentication check\n  setTimeout(() => {\n    // Mock user data, replace with actual user data if logged in\n    setCurrentUser({\n      id: 12345,\n      name: \"John Doe\"\n    });\n    setLoading(false);\n  }, 1000);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this); // Or a loading spinner/component\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      setCurrentUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n// 3. Create the custom hook\n_s(AuthProvider, \"ta0ozVSi/laveBdN8v1z4lKHbzA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","setTimeout","id","name","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/LotusLoveLinks/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\n// 1. Initialize the context\r\nexport const AuthContext = createContext();\r\n\r\n// 2. Create the provider component\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [loading, setLoading] = useState(false); // Change loading to false initially\r\n\r\n    // Simulate a delayed authentication check\r\n    setTimeout(() => {\r\n        // Mock user data, replace with actual user data if logged in\r\n        setCurrentUser({ id: 12345, name: \"John Doe\" });\r\n        setLoading(false);\r\n    }, 1000);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>; // Or a loading spinner/component\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ currentUser, setCurrentUser }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// 3. Create the custom hook\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error(\"useAuth must be used within an AuthProvider\");\r\n    }\r\n    return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C;EACAW,UAAU,CAAC,MAAM;IACb;IACAH,cAAc,CAAC;MAAEI,EAAE,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAW,CAAC,CAAC;IAC/CH,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,IAAI,CAAC;EAER,IAAID,OAAO,EAAE;IACT,oBAAOP,OAAA;MAAAG,QAAA,EAAK;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;;EAEA,oBACIf,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEZ,WAAW;MAAEC;IAAe,CAAE;IAAAH,QAAA,EACxDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;;AAED;AAAAX,EAAA,CAtBaF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAuBzB,OAAO,MAAMiB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAGxB,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACoB,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}